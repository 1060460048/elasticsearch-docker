FROM {{ .From }}

{{- $gosu := index .Packages "gosu" }}
{{- $elasticsearch := index .Packages "elasticsearch" }}

# add gosu for easy step-down from root
ENV GOSU_VERSION {{ $gosu.Version }}
RUN set -x \
	&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \
	&& wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
	&& wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc" \
# copy source /usr/local/src OSS compliance
        && wget -O gosu.tar.gz "https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz" \
	&& tar -xvf gosu.tar.gz -C /usr/local/src \
	&& rm gosu.tar.gz \
# extract gosu binary and check signature
	&& export GNUPGHOME="$(mktemp -d)" \
	&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys {{ $gosu.Gpg }} \
	&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
	&& rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc \
	&& chmod +x /usr/local/bin/gosu \
	&& gosu nobody true

# Install Elastic Search
RUN set -ex; \
# https://artifacts.elastic.co/GPG-KEY-elasticsearch
	key='{{ $elasticsearch.Gpg }}'; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	gpg --export "$key" > /etc/apt/trusted.gpg.d/elastic.gpg; \
	rm -r "$GNUPGHOME"; \
	apt-key list

# https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-repositories.html
RUN set -x \
	&& apt-get update && apt-get install -y --no-install-recommends apt-transport-https && rm -rf /var/lib/apt/lists/* \
	{{- if eq ($elasticsearch.Major) "5.2" }}
	&& echo 'deb https://artifacts.elastic.co/packages/5.x/apt stable main' > /etc/apt/sources.list.d/elasticsearch.list
	{{- else }}
	&& echo 'deb http://packages.elasticsearch.org/elasticsearch/2.x/debian stable main' > /etc/apt/sources.list.d/elasticsearch.list
	{{- end }}

ENV ELASTICSEARCH_VERSION {{ $elasticsearch.Major }}
ENV ELASTICSEARCH_DEB_VERSION {{ $elasticsearch.Version }}

# grab the sourcecode
RUN mkdir -p /usr/src/elasticsearch \
	&& wget https://github.com/elastic/elasticsearch/archive/v{{ $elasticsearch.Version }}.tar.gz -O /usr/src/elasticsearch/elasticsearch-source-v{{ $elasticsearch.Version }}.tar.gz \
	&& tar -xzvf /usr/src/elasticsearch/elasticsearch-source-v{{ $elasticsearch.Version }}.tar.gz -C /usr/src/elasticsearch/

RUN set -x \
	\
# don't allow the package to install its sysctl file (causes the install to fail)
# Failed to write '262144' to '/proc/sys/vm/max_map_count': Read-only file system
	&& dpkg-divert --rename /usr/lib/sysctl.d/elasticsearch.conf \
	\
	&& apt-get update \
	&& apt-get install -y --no-install-recommends "elasticsearch=$ELASTICSEARCH_DEB_VERSION" \
	&& rm -rf /var/lib/apt/lists/*

ENV PATH /usr/share/elasticsearch/bin:$PATH

WORKDIR /usr/share/elasticsearch

COPY config ./config

# Download Apache 2.0 License
RUN wget -q http://www.apache.org/licenses/LICENSE-2.0.txt -O /usr/share/elasticsearch/LICENSE

RUN set -ex \
	&& for path in \
		./data \
		./logs \
		./config \
		/usr/share/elasticsearch \
		./config/scripts \
	; do \
		mkdir -p "$path"; \
		chown -R elasticsearch:elasticsearch "$path"; \
	done

VOLUME /usr/share/elasticsearch/data

COPY docker-entrypoint.sh /

EXPOSE 9200 9300
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["elasticsearch"]
